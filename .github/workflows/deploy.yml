name: Deploy to EKS
on:
  push:
    branches: [ main ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install AWS CLI and jq
      run: |
        sudo apt-get update && sudo apt-get install -y jq
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
    - name: Deploy to EKS
      run: |
        export KUBECONFIG=${GITHUB_WORKSPACE}/kubeconfig.yaml
        aws eks update-kubeconfig --region us-east-1 --name demo-1122 --alias demo-1122 --kubeconfig $KUBECONFIG
        TOKEN=$(aws eks get-token --region us-east-1 --cluster-name demo-1122 --output json | jq -r '.status.token')
        kubectl config set-credentials eks-user --token="$TOKEN" --kubeconfig=$KUBECONFIG
        kubectl apply -f k8s/service-account.yaml --kubeconfig=$KUBECONFIG
        kubectl apply -f k8s/rbac.yaml --kubeconfig=$KUBECONFIG
        kubectl apply -f k8s/secrets.yaml --kubeconfig=$KUBECONFIG
        kubectl apply -f k8s/mongo-deployment.yaml --kubeconfig=$KUBECONFIG
        kubectl apply -f k8s/frontend-deployment.yaml --kubeconfig=$KUBECONFIG
        kubectl apply -f k8s/backend-deployment.yaml --kubeconfig=$KUBECONFIG
        kubectl apply -f k8s/ingress.yaml --kubeconfig=$KUBECONFIG
        kubectl get pods -n default --kubeconfig=$KUBECONFIG